service: SLS-cronWhois # NOTE: update this with your service name

frameworkVersion: ">=1.8.0 <3.0.0"

custom:
  stage: ${opt:stage, "dev"}
  domains: "example.com cocacola.com doesnotexist31415926.com" # Space separated list of domains to check
  cronWhoisTopic: "cronWhoisTopic-${self:custom.stage}"

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 128
  timeout: 300
  region: us-east-1
  stage: ${self:custom.stage}
  lambdaHashingVersion: 20201221
  # Environment Variables
  environment:
    DOMAINS: ${self:custom.domains}
    TOPICS:
      Ref: cronWhoisTopic
  # IAM policies
  iamRoleStatements:
    # Grant access to publish to cronWhois SNS Topic
    - Effect: "Allow"
      Action:
        - "sns:Publish"
      Resource:
        - Ref: "cronWhoisTopic"

layers:
  commonModules:
    path: layers/CommonModules
    compatibleRuntimes:
      - nodejs10.x
    name: cronWhois-commonModules-${self:custom.stage}
    description: "whois-json"

functions:
  cronWhois:
    handler: lambdas/cronWhois.handler
    description: "Cron to check whois for specified domains. Sends SNS notification if domain is expired."
    layers:
      - {Ref: CommonModulesLambdaLayer}
    events:
      - schedule: rate(10 minutes)  # How frequently to check whois for domains.

# CloudFormation resources
resources:
 Resources:
   cronWhoisTopic:
     Type: "AWS::SNS::Topic"
     Properties:
       TopicName: "${self:custom.cronWhoisTopic}"

package:
  patterns:
    - '!README.md'
    - '!LICENSE'
    - '!package.json'
    - '!package-lock.json'
